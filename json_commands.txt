JSON

1. Include liberary json-c / libjson
2. Create pointer for the different Functions


    /*Creating a json object*/
    json_object *jobj = json_object_new_object();

    /*Creating a json string*/
    json_object *jstring = json_object_new_string("Joys of Programming");

    /*Creating a json integer*/
    json_object *jint = json_object_new_int(10);

    /*Creating a json boolean*/
    json_object *jboolean = json_object_new_boolean(1);

    /*Creating a json double*/
    json_object *jdouble = json_object_new_double(2.14);

    /*Creating a json array*/
    json_object *jarray = json_object_new_array();

3. Add entries into the object

    json_object_object_add(jobj,"Site Name", jstring);
    json_object_object_add(jobj,"Technical blog", jboolean);
    json_object_object_add(jobj,"Average posts per day", jdouble);
    json_object_object_add(jobj,"Number of posts", jint);
    json_object_object_add(jobj,"Categories", jarray);

4. convert the object into string format and copy to the send buffer

     strcpy(temp_buff, json_object_to_json_string(jobj))

5. send or write the socket

      write(fd, temp_buff, strlen(temp_buff))

6. receive or read the socket

      r = read(connfd, buff, MAX_SIZE);
      printf("READ: %s\n", buff);



